#version: '3.8' # Specify Docker Compose file format version

services:
  backend:
    container_name: finance-tracker-backend
    build:
      context: . # Build context is the current directory (solution root)
      dockerfile: Dockerfile.backend # Path to the backend's Dockerfile
    ports:
      - "8080:80" # Map host port 8080 to container's port 80. Access backend directly via http://localhost:8080
    environment:
      # Set ASP.NET Core environment to Development for local debugging features
      - ASPNETCORE_ENVIRONMENT=Development
      # Connection string for PostgreSQL. 'db' refers to the service name in this compose file.
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=FinanceTrackerDB;Username=admin;Password=password
      # Provide JWT configuration. Ensure these match your appsettings.json or actual config.
      - Jwt__Key=your_very_secret_key_here_for_local_dev_and_must_be_long_enough
      - Jwt__Issuer=FinanceTrackerApi
      - Jwt__Audience=FinanceTrackerClient
    depends_on:
      - db # Backend service depends on the database service being started
    restart: unless-stopped # Always restart unless explicitly stopped

  frontend:
    container_name: finance-tracker-frontend
    build:
      context: . # Build context is the current directory (solution root)
      dockerfile: Dockerfile.frontend # Path to the frontend's Dockerfile
    ports:
      - "4200:80" # Map host port 4200 to container's port 80 (Nginx default). Access frontend via http://localhost:4200
    depends_on:
      - backend # Frontend service depends on the backend service being started (for API proxying)
    restart: unless-stopped # Always restart unless explicitly stopped

  db:
    container_name: finance-tracker-db
    image: postgres:14-alpine # Use a specific version of PostgreSQL. 'alpine' images are smaller.
    ports:
      - "5432:5432" # Map host port 5432 to container's port 5432. Access DB directly via localhost:5432
    environment:
      POSTGRES_DB: FinanceTrackerDB
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      # Persist database data to a named volume on the host, so data isn't lost if container is removed.
      - finance_tracker_db_data:/var/lib/postgresql/data
    restart: unless-stopped # Always restart unless explicitly stopped

# Define the named volumes used by services
volumes:
  finance_tracker_db_data: # Data for the PostgreSQL database